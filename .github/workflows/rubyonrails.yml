# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: ["dev"]
  # pull_request:
  #   branches: ["main"]
jobs:
  joba_joba:
    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     image: postgres:14
    #     ports:
    #       - "5432:5432"
    #     env:
    #       POSTGRES_DB: rails_test
    #       POSTGRES_USER: rails
    #       POSTGRES_PASSWORD: password
    # env:
    #   POSTGRES_DB: rails_test
    #   POSTGRES_USER: rails
    #   POSTGRES_PASSWORD: password
    #   RAILS_ENV: test
    #   DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      # - name: Install Ruby and gems
      #   uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4 # v1.127.0
      #   with:
      #     bundler-cache: true
      # Add or replace database setup steps here
      # - name: Set up database schema
      #   run: bin/rails db:schema:load
      # Add or replace test runners here
      - name: Run tests
        run: bin/rake
      - name: Copy to remote server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: .
          remote: /home/projects/aykuli.su
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}

      # - name: Copy with rsync
      #   run: |
      #     ls . -al
      #     echo '0     -----------------------------------------'
      #     cat ~/.ssh/known_hosts
      #     echo '1     ----------------------------------------'
      #     rsync -rv --delete . ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/projects/aykuli.su
      #     echo '2     ----------------------------------------'
      #     docker container stop ror
      #     echo '3     ----------------------------------------'
      #     docker-compose --file docker-compose.prod.yml up -d

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Install Ruby and gems
  #       uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4 # v1.127.0
  #       with:
  #         bundler-cache: true
  #     # Add or replace any other lints here
  #     - name: Security audit dependencies
  #       run: bin/bundler-audit --update
  #     - name: Security audit application code
  #       run: bin/brakeman -q -w2
  #     - name: Lint Ruby files
  #       run: bin/rubocop --parallel
